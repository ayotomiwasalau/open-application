name: Build and Deploy tommyjumper via Argo CD

on:
  push:
    branches: [ main, master ]
    paths:
      - 'tommyapps/tommyjumper/**'
      - '.github/workflows/tommyjumper-ci.yml'
  workflow_dispatch:

env:
  IMAGE_NAME: tomiwasalau01/tommyjumper
  APP_NAME: tommyapps
  ARGOCD_NAMESPACE: argocd
  KUBECONFIG: kubeconfig
  APP_NAMESPACE: dev

jobs:
  build-and-push: 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./tommyapps/tommyjumper
          file: ./tommyapps/tommyjumper/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}


  argocd-sync:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4

      - name: Configure kubectl
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > $KUBECONFIG

      - name: Check Argo CD installation
        run: |
          if ! kubectl get namespace $ARGOCD_NAMESPACE &> /dev/null; then
            echo "ERROR: Argo CD namespace not found. Please install Argo CD first."
            exit 1
          fi

      - name: Create namespace if not exists
        run: |
          kubectl create namespace $APP_NAMESPACE || true


      - name: Apply Argo CD Application
        run: |
          kubectl apply -f ./helm/argocd/helm_app.yaml

      - name: Trigger Argo CD sync
        run: |
          kubectl patch application $APP_NAME -n $ARGOCD_NAMESPACE --type merge \
            -p '{"operation": {"initiatedBy": {"username": "github-action"}, "sync": {"revision": "HEAD"}}}'
